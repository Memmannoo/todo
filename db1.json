{
  "projects": [
    {
      "project_name": "Gathered Data",
      "project_description": "Collection of random data may be needed",
      "created_at": "9/8/2022",
      "due_to": "2023-01-01",
      "updated_at": null,
      "id": 1
    },
    {
      "project_name": "Laravel and Nuxt",
      "project_description": "installation and configuration",
      "created_at": "9/9/2022",
      "due_to": "2022-12-01",
      "updated_at": null,
      "id": 2
    },
    {
      "project_name": "Flutter",
      "project_description": "First Flutter tutorial and installation",
      "created_at": "9/9/2022",
      "due_to": "2022-09-25",
      "updated_at": null,
      "id": 3
    }
  ],
  "todos": [
    {
      "id": 1,
      "projectId": 1,
      "todo": [
        {
          "name": "Laravels",
          "data": [
            "<p style=\"text-align: center;\"><strong><span style=\"color: #ffffff; background-color: #e03e2d; font-size: 18pt;\">Laravel Documentation</span></strong></p>\n<p>Routes:&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/user', [UserController::class, 'index']);</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>Route::match(['get', 'post'], '/', function () {</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>Route::any('/', function () {</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>php artisan route:list</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>php artisan route:list -v&nbsp; //with middleware</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/posts/{post}/comments/{comment}', function ($postId, $commentId) {</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/user/{name?}', // optional parameter</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/user/{name}', function ($name) {</p>\n<p>&nbsp; <span style=\"white-space: pre;\"> </span>&nbsp; //</p>\n<p><span style=\"white-space: pre;\"> </span>})-&gt;where('name', '[A-Za-z]+');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/user/{name}', function ($name) {</p>\n<p>&nbsp; &nbsp;<span style=\"white-space: pre;\"> </span> //</p>\n<p><span style=\"white-space: pre;\"> </span>})-&gt;whereAlphaNumeric('name');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>in: App\\Providers\\RouteServiceProvider ///add pattern for all routes</p>\n<p><span style=\"white-space: pre;\"> </span>public function boot()</p>\n<p><span style=\"white-space: pre;\"> </span>{</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>Route::pattern('id', '[0-9]+');</p>\n<p><span style=\"white-space: pre;\"> </span>}</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect()-&gt;route('profile');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$url = route('profile', ['id' =&gt; 1]);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>{</p>\n<p><span style=\"white-space: pre;\"> </span>use App\\Models\\Post;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/posts/{post:slug}', function (Post $post) {</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>return $post; //search in post using slug not id</p>\n<p><span style=\"white-space: pre;\"> </span>});</p>\n<p><span style=\"white-space: pre;\"> </span>}</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>{</p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/locations/{location:slug}', [LocationsController::class, 'show'])</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; -&gt;name('locations.view')</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; -&gt;missing(function (Request $request) {</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Redirect::route('locations.index');</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; });</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>}</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>MiddleWare::</p>\n<p><span style=\"white-space: pre;\"> </span>Route::get('/', function () {</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>//</p>\n<p><span style=\"white-space: pre;\"> </span>})-&gt;middleware(['first', 'second']);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>-------------------------------</p>\n<p><span style=\"white-space: pre;\"> </span>Route::middleware([EnsureTokenIsValid::class])-&gt;group(function () {</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>Route::get('/', function () {</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; //</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>});</p>\n<p>&nbsp;</p>\n<p>&nbsp; &nbsp;<span style=\"white-space: pre;\"> </span> Route::get('/profile', function () {</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; //</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>})-&gt;withoutMiddleware([EnsureTokenIsValid::class]);</p>\n<p><span style=\"white-space: pre;\"> </span>});</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>----------------------------</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>Route::resource('photos', PhotoController::class)-&gt;only([</p>\n<p>&nbsp; &nbsp; 'index', 'show'</p>\n<p><span style=\"white-space: pre;\"> </span>]);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>Route::resource('photos', PhotoController::class)-&gt;except([</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>'create', 'store', 'update', 'destroy'</p>\n<p><span style=\"white-space: pre;\"> </span>]);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>----------------------------------</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p>Requests:</p>\n<p><span style=\"white-space: pre;\"> </span> $name = $request-&gt;input('name');</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>$uri = $request-&gt;path();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;is('admin/*')) {</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>//</p>\n<p><span style=\"white-space: pre;\"> </span>}</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$url = $request-&gt;url();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$urlWithQueryString = $request-&gt;fullUrl();<span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;fullUrlWithQuery(['type' =&gt; 'phone']);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$method = $request-&gt;method();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;isMethod('post')) {</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>//</p>\n<p><span style=\"white-space: pre;\"> </span>}</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>$ipAddress = $request-&gt;ip();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;expectsJson()) {</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>--------------------------------------------------------------</p>\n<p><span style=\"white-space: pre;\"> </span>$input = $request-&gt;all();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$input = $request-&gt;input();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$input = $request-&gt;collect();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$name = $request-&gt;input('name');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$name = $request-&gt;input('name', 'Sally'); //if name is empty, default is saly</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$name = $request-&gt;query('name'); //query url string</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$name = $request-&gt;query('name', 'Helen'); // with default if emtpy name</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$query = $request-&gt;query(); // all query strings</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>:::::::::::::::::: if json, use .</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$name = $request-&gt;input('user.name');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$name = $request-&gt;name;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>::::::::::::::::::::;;filtring request:</p>\n<p><span style=\"white-space: pre;\"> </span>$input = $request-&gt;only(['username', 'password']);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$input = $request-&gt;only('username', 'password');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$input = $request-&gt;except(['credit_card']);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$input = $request-&gt;except('credit_card');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>:::::::::::::::::::::::::::::::::::::::::::::::::::::</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;has('name')) {</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;has(['name', 'email']))</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;hasAny(['name', 'email'])) {</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;flash(); // will hold the request to the next reqeust, and be acces<span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;flashOnly('name');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;flashExcept('password');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect('form')-&gt;withInput();</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>-------------------------------------</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect('form')-&gt;withInput(</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>$request-&gt;except('password')</p>\n<p><span style=\"white-space: pre;\"> </span>);</p>\n<p><span style=\"white-space: pre;\"> </span>-------------------------------------</p>\n<p><span style=\"white-space: pre;\"> </span>//comming from the flashed request</p>\n<p><span style=\"white-space: pre;\"> </span>$username = $request-&gt;old('username');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>value=\"{{ old('username') }}\"&gt;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>---------------------------------------------</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request Files:::::::::</p>\n<p><span style=\"white-space: pre;\"> </span>$file = $request-&gt;file('photo');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$file = $request-&gt;photo;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;hasFile('photo')) {</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;file('photo')-&gt;isValid()) {</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$path = $request-&gt;photo-&gt;path();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$extension = $request-&gt;photo-&gt;extension();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$path = $request-&gt;photo-&gt;store('images');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$path = $request-&gt;photo-&gt;store('images', 's3');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$path = $request-&gt;photo-&gt;storeAs('images', 'filename.jpg');</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>////////////////////////////////////////////////////////////////////</p>\n<p>&nbsp;</p>\n<p>Redirections:</p>\n<p><span style=\"white-space: pre;\"> </span>return back()-&gt;withInput();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect()-&gt;route('login');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect('home/dashboard');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect()-&gt;route('profile', ['id' =&gt; 1]);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect()-&gt;action(</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>[UserController::class, 'profile'], ['id' =&gt; 1]</p>\n<p><span style=\"white-space: pre;\"> </span>);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect()-&gt;away('https://www.google.com');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return redirect('dashboard')-&gt;with('status', 'Profile updated!');</p>\n<p><span style=\"white-space: pre;\"> </span>@if (session('status'))</p>\n<p><span style=\"white-space: pre;\"> </span>{{ session('status') }}<span style=\"white-space: pre;\"> </span></p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return response()-&gt;json([</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>'name' =&gt; 'Abigail',</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>'state' =&gt; 'CA',</p>\n<p><span style=\"white-space: pre;\"> </span>&nbsp; ]);</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>return response()-&gt;download($pathToFile);</p>\n<p>&nbsp;</p>\n<p>////////////////////////////////////////////////////////////////////</p>\n<p>Sessions:</p>\n<p><span style=\"white-space: pre;\"> </span>session();</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;all();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>session('key'); //or</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;put('key', 'value');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;session()-&gt;has('users')) { //true if users is not null</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;session()-&gt;exist('users')) { //true if even if users in null</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>if ($request-&gt;session()-&gt;missing('users')) {</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;push('user.teams', 'developers'); // add item to array</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$value = $request-&gt;session()-&gt;pull('key', 'default'); // delete item&nbsp;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;flash('status', 'Task was successful!'); // store for the nex req</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;now('status', 'Task was successful!');</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;forget(['name', 'status']); //forget two items</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;flush(); //delete all sessions</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;regenerate();</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$request-&gt;session()-&gt;invalidate();</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>//////////////////////////////////////////////////////////////</p>\n<p>&nbsp;</p>\n<p>Validation:</p>\n<p><span style=\"white-space: pre;\"> </span>$validated = $request-&gt;validate([</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>'title' =&gt; 'required|unique:posts|max:255',</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>'body' =&gt; 'required',</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>]);</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>$validatedData = $request-&gt;validateWithBag('postError', [</p>\n<p>&nbsp; &nbsp; <span style=\"white-space: pre;\"> </span>'title' =&gt; ['required', 'unique:posts', 'max:255'],</p>\n<p><span style=\"white-space: pre;\"> </span>---------@if ($errors-&gt;postError-&gt;any())</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span>@if ($errors-&gt;any())</p>\n<p><span style=\"white-space: pre;\"> </span>@foreach ($errors-&gt;all() as $error)</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>&lt;input ... class=\"@error('title', 'post') is-invalid @enderror\"&gt;</p>\n<p>&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span></p>\n<p><span style=\"white-space: pre;\"> </span></p>"
          ]
        },
        {
          "name": "Dockers",
          "data": [
            "<p style=\"text-align: center;\"><span style=\"background-color: #e03e2d; color: #ffffff; font-size: 24pt;\">docker php.ini</span></p>\n<p style=\"text-align: center;\">&nbsp;</p>\n<p style=\"text-align: center;\">&nbsp;</p>\n<p>docker ps</p>\n<p>docker exec ... cont id bash</p>\n<p>cd /user/local/etc/php</p>\n<p>ls&nbsp; &nbsp; &nbsp; //find php-ini if not found then</p>\n<p>mv php.ini-production php.ini&nbsp; /// rename it</p>\n<p>exit //from the container</p>\n<p>&nbsp;</p>\n<p>docker cp &lt;containerID&gt;:/usr/local/etc/php/php.ini .&nbsp; &nbsp; // where . location files on host</p>\n<p><span style=\"white-space: pre;\"> </span>&nbsp; &nbsp;var/www/html</p>\n<p><span style=\"white-space: pre;\"> </span>&nbsp; &nbsp;Desktop/docker files</p>\n<p>&nbsp;</p>\n<p>volumes:&nbsp;</p>\n<p><span style=\"white-space: pre;\"> </span>- ./php.ini:/user/local/etc/php/php.ini</p>\n<p>now you can edit the php.ini from local</p>\n<p>&nbsp;</p>",
            "<p style=\"text-align: center;\"><span style=\"font-size: 18pt; background-color: #e03e2d; color: #ffffff;\"><strong>Docker Full tutorail</strong></span></p>\n<p style=\"text-align: left;\">&nbsp;</p>\n<p style=\"text-align: left;\">&nbsp;</p>\n<p style=\"text-align: left;\"><span style=\"font-size: 18.6667px;\">special feature:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; - sail down -v&nbsp; &nbsp; //this will stop the containers and remove all volumes, that if we want to <span style=\"white-space: pre;\"> </span>make some changes for the volumes, ex: to <span style=\"white-space: pre;\"> </span>rename the db in .env in laravel file, so first stop container with -v, then change then name then start&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; - copy files from container directly to local:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker cp &lt;containerID&gt;:/usr/local/etc/php/php.ini . // where . is the local path</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; - run command to container directly without entering to it using bash:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker exec &lt;contaierId&gt; composer install</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span> composer init</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span> composer update</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span> git init</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span> &lt; any other command &gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;- or: using docker-compose, we can use :</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker-compose exec &lt;serviceName&gt; &lt;command&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker-compose exec first-app composer install</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">/////FINAL:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">1. pull the needed images</span></p>\n<p><span style=\"font-size: 18.6667px;\">2. after creating Dockerfile:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>FROM dockerhub image:tag</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>COPY /site3 /var/www/html</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>RUN&nbsp; docker-php-ext-install mysqli \\&nbsp; &nbsp; &nbsp; &nbsp;//&nbsp; \\means install all list down with RUN</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>php-pdo</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>EXPOSE 80&nbsp; &nbsp; //Expose the port of the container</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">3. then can use cmd or docker-compose:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>a. cmd :</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker build -t my-php-app . // build new image from the specified image up</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker run -it --rm --name my-running-app my-php-app // run the container</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>check down</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>b. docker-compose:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>add version</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>add services:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>service1:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>image:image name //but will not build it, so use instead</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>build: . //build the image in the Dockerfile</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>volumes:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>- ./:/var/www/html</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>enviroment:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>ports:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">5. now new container will be loaded for the new image</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>note: any new update for Dockerfile and docker-compose, we should stop the container</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then remove it then remove the image then&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker compose -f docker-compose.yaml up</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">/////ENDFINAL</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">https://www.youtube.com/watch?v=ZlOPCsZpKQY&amp;list=PLCakfctNSHkGYdA82WDUKF3WGyONpGiEw&amp;index=2</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">1. install docker tools</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">2. install image from docker hub: docker pull php:8.1-apache</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">3. docker images // to list all images</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">4. to run the image as container:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker run -it --name php_container1 php:8.1-apache /bin/bash</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-it: for linux bash command line as specified at the end</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>--name: name of the contianer</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>php:8.1-apache is the image we want to run</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">5. if you exit it from cmd then to re-run it: for containers only</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>first start the container:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker start php_container1</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then attach it to the cmd:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker attach php_container1</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">6. docker ps -a</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>list all proccess running or exited</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">7. to stop a running container:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker stop &lt;container id&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">8. docker rm &lt;container id&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">9. create a docker file named: Dockerfile</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>FROM php:8.1.4-apache</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>COPY site/ /var/www/html</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>EXPOSE 80</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">10. then from inside the webdirectroy run the command: this can be replaced by docker-composes</span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px;\"> </span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker build -t php_blabla .&nbsp; /// build an image from an existed image with tag name</span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px;\"> </span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker run -it --rm --name php_container1 -p 80:80 php_blabla</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker run -i --rm --name php_cont1 -v C:\\Users\\Ayoub\\Desktop\\newphp\\:/var/www/html/ -p 80:80 php_apache12</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>--rm, remove the container after exit</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-v create a volume to make direct changes go on</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-p specify the port of local:container</span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px;\"> </span></p>\n<p><span style=\"font-size: 18.6667px;\">11. there is a warning saying</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>apache2: Could not reliably determine the server's fully qualified domain&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>to fix it:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>in docker file, add:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>RUN echo \"ServerName localhost\" &gt;&gt; /etc/apache2/apache2.conf</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">12. to fast remove an image:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker rmi &lt;image name&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">////////////////////////////////////////////////////////////////</span></p>\n<p><span style=\"font-size: 18.6667px;\">docker-compose.yml / for multi services to work on parallel</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">1. create a file : docker-compose.yml</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">2.&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">version: '3.7'</span></p>\n<p><span style=\"font-size: 18.6667px;\">services:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; web: //can be named any</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; build: . #. means the Dockerfile which is now in the same directory and can be in differnet</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; container_name: &lt;name&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; depends_on:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; &nbsp; -db // db is the second service, to use to connect to db as the host instead of 127.0.</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; volumes:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; &nbsp; - ./site:/var/www/html or ./:var/www/html</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; ports:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; &nbsp; - 80:80 //ports must not be used, change as needded</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; db:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; image: mysql</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; volumes:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; &nbsp; - ./db_data/:/var/lib/mysql</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; environment:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; &nbsp; &nbsp; MYSQL_ROOT_PASSWORD: 123</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; &nbsp; &nbsp; MYSQL_DATABASE: docker_database</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; ports:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp; &nbsp; &nbsp; - 3306:3306</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">3. then run command :</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker-compose up</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">4. then in another cmd:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker exec -it &lt;mysql_id&gt; bash</span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px;\"> </span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then: mysql -uroot -p&lt;password&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>show databases;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>use &lt;database&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>show tables</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>describe &lt;table name&gt;</span></p>\n<p><span style=\"font-size: 18.6667px;\">5. install mysql workbench</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>and connect to the 127.0 ..:3306</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>and create a new connection with db of the same name and create table</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>it will show in the terminal</span></p>\n<p><span style=\"font-size: 18.6667px;\">//////////////////////////////////////////////////////////////</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">now we have built apache and mysql separtly, and after checking everything works well</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">we have to make the connection with pdo, but apache image has now additinal extensions installed</span></p>\n<p><span style=\"font-size: 18.6667px;\">we have to install them,</span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px;\"> </span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>1. in Dockerfile add:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>RUN docker-php-ext-install pdo pdo_mysql</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>2. then rebuild the container:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>exit the terminal using ctl-c</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then: docker-compose down</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>3.notice that the PDO host is no longer: localhost,<span style=\"white-space: pre;\"> </span></span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>it will be your local ip address:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>192.168.0.&lt;107&gt;, check ipconfig</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">/////////////////////////////////////////////////////</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">docker commit:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">1. first login: docker login</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">2. docker commit a08cc047bf96 alyhammoud/apache_php_dpo:1.0</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>commit image id of the apache only not mysql</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>to user alyhammoud/&lt;new name image&gt; : with tag name</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">3. this will create a new image: so push this new image :</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker push alyhammoud/apache_php_dpo:1.0</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">4. then chck repository in your docker account</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">////////////////////////////////////////////////////////</span></p>\n<p><span style=\"font-size: 18.6667px;\">docker network to link containers toghter:</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>a. docker network create mongo-network</span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px;\"> </span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>b. #start mongodb:</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker run -d \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-p 27017:27017 \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-e MONGO_INITDB_ROOT_USERNAME=admin \\<span style=\"white-space: pre;\"> </span></span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-e MONGO_INITDB_ROOT_PASSWORD=password \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>--net mongo-network \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>--name mongodb #name of the container</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>mongo #name of the image</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>c. # start mongo-express</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>docker run -d \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-p 8081:8081 \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-e ME_CONFIG_MONGODB_ADMINUSERNAME=admin \\<span style=\"white-space: pre;\"> </span></span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-e ME_CONFIG_MONGODB_ADMINPASSWORD=password \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>-e ME_CONFIG_MONGODB_SERVER=mongodb # the name of the container</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>--net mongo-network \\</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>--name mongodb #name of the container</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>mongo #name of the image</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>d. then visit: localhost:8081,,,, so, mongo-express is connected to mongodb</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>e. docker network ls</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">////////////////</span></p>\n<p><span style=\"font-size: 18.6667px;\">stop all container / kill // and images</span></p>\n<p><span style=\"font-size: 18.6667px;\">&nbsp;</span></p>\n<p><span style=\"font-size: 18.6667px;\">docker kill $(docker ps -q)</span></p>\n<p><span style=\"font-size: 18.6667px;\">docker rm $(docker ps -a -q)</span></p>\n<p><span style=\"font-size: 18.6667px;\">docker rmi $(docker images -q)</span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px;\"> </span></p>\n<p>&nbsp;</p>",
            "<p>asd</p>\n<p>&nbsp;</p>"
          ]
        },
        {
          "name": "Putty for upload",
          "data": [
            "<p style=\"text-align: center;\"><span style=\"background-color: #7e8c8d; color: #ffffff;\"><strong><span style=\"font-size: 18pt; background-color: #7e8c8d;\">Putty and GITHUB</span></strong></span></p>\n<p style=\"text-align: center;\">&nbsp;</p>\n<p style=\"text-align: left;\"><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">1. github: add new repository</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>upload laravel with compser file</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">2. enable ssh in hostinger</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">3. download putty</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>a. add the ip and the port (from hostinger ssh page)</span></span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px; color: #000000;\"> </span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>b. then save with the name you want,, to load it later&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>c. under connection/data --&gt; add auto-user-login: the user u get from hostinger</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then back to home page and save the putty</span></span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px; color: #000000;\"> </span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>d. open puttygen: to generate pub and priv keys</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>i. click generate, then keep moving mouse in the empty panel to fill the key</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>ii. save public key: name.pub</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>save private key: name.ppk (add keyphrase as password)</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>iii. in putty:&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>go to SSH/Auth --&gt; upload the private key there</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>e. in hostinger ssh page:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>add the public key we generated:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>edit name.pub,, select the key text and paste it there</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>ex:(it should start with ssh-rsa,, we add it manually)</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>ssh-rsa&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>AAAAB3NzaC1yc2EAAAADAQABAAABAQChMr4Q60zIKraILZ/Ld59LH/9hvS4hajpX</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">4FwoSDT38RCYjJtYp9PV8VvYmVzs8q0vJZ6V+phxUQGQCYZX1pzL6l5ryzCnm/AW</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">jX/wpNA0q3UFw2hJGP2wy1AroTxSEv</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>make sure to be one line in hostinger textarea, remove spaces and enter (breaks)</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>f. login in putty, it opens the terminalm asks for password we put for the private key</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">4. start using ssh linux commands:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>pwd: to view the working dir</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>ls: to list all files/dir</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>we must first: cd domains</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>rm -r api.webname.com</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>git clone https:..... &lt;api.webname.com&gt;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>clone the repo into the same name we removed</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>cd api.webname.com</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>ls -la (then all laravel files will be listed)</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>laravel 8.x and 9.x need php 8.1 or later, so go change it</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>from hostinger php configuration of the domain and host</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then run command: composer install</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>&nbsp; composer update</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>to install all packages and vendor</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>cp .env.example .env ( create .env )</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>nano .env</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>APP_NAME=\"the name\"</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>APP_ENV=prod</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>APP_KEY=</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>APP_DEBUG=false</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>APP_URL=https://api.webname.com</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then create db in hositnger in api.webname.com</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then add it in the .env</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then save and exit .env</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>APP_KEY is generated by:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>php artisan key:generate --ansi</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then the key is added into .env</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>then: php artisan migrate</span></span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px; color: #000000;\"> </span></p>\n<p><span style=\"white-space: pre; font-size: 18.6667px; color: #000000;\"> </span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">5. last thing: if we try to visit api.webname.com,, will not open the page since we removed the api.webname.com at first and hostinger looks for public_html as entry point</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>so: we need to point laravel public folder as public_html by:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>so we use symbolic links:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>ln -s public public_html</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">------------------------------------------------------------------------------------------</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">in the main web page where we uploaded vue:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\"><span style=\"white-space: pre;\"> </span>we need to add .htaccess to make redirections go well since we are using webhistory in the router file:</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">.htaccess:<span style=\"white-space: pre;\"> </span></span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">RewriteEngine On</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">RewriteCond %{REQUEST_FILEnAME} !-f</span></span></p>\n<p><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">RewriteCond %{REQUEST_FILEnAME} !-d</span></span></p>\n<p style=\"text-align: left;\"><span style=\"color: #000000;\"><span style=\"font-size: 18.6667px;\">RewriteRule . index.html</span></span></p>"
          ]
        }
      ],
      "created_at": null,
      "updated_at": "9/14/2022",
      "depricate": [
        [],
        [],
        []
      ]
    },
    {
      "id": 2,
      "projectId": 2,
      "todo": [
        {
          "name": "Links for nuxt and laravel",
          "data": [
            "<p><span style=\"font-size: 18pt;\"><strong><span style=\"color: #ba372a;\">Vite and Nuxt:</span></strong></span></p>\n<p>https://www.youtube.com/watch?v=R1CdPTLaxas</p>",
            "<p><span style=\"color: #e03e2d; font-size: 18pt;\">laravel packages to run nuxt:</span></p>\n<ol>\n<li>https://dev.to/skyrpex/create-a-spa-with-laravel-and-nuxt--54k</li>\n<li>https://medium.com/vue-mastery/10-reasons-to-use-nuxt-js-for-your-next-web-application-522397c9366b</li>\n</ol>",
            "<p><span style=\"color: #ffffff; background-color: #ba372a;\"><strong>SEO js crawls</strong></span></p>\n<p>https://searchengineland.com/tested-googlebot-crawls-javascript-heres-learned-220157</p>"
          ]
        },
        {
          "name": "Inertia (make SEO friendly)",
          "data": [
            "<p><span style=\"color: #ffffff; background-color: #e03e2d;\"><span style=\"font-size: 18pt; background-color: #e03e2d;\">Trick to make vue with laravel using inertial js SEO Friendly</span></span></p>\n<p>&nbsp;</p>\n<p>https://dev.to/hazzazbinfaiz/trick-to-make-laravel-inertia-seo-friendly-3h3j</p>"
          ]
        }
      ],
      "created_at": null,
      "updated_at": "9/9/2022",
      "depricate": [
        [],
        []
      ]
    },
    {
      "id": 3,
      "projectId": 3,
      "todo": [
        {
          "name": "Installation",
          "data": [
            "<p style=\"text-align: center;\"><span style=\"font-size: 18pt;\"><strong><span style=\"color: #e03e2d;\">Installation</span></strong></span></p>\n<p style=\"text-align: left;\">&nbsp;</p>\n<ol>\n<li style=\"text-align: left;\"><strong>https://flutter.dev/</strong></li>\n<li style=\"text-align: left;\"><strong>get started</strong></li>\n<li style=\"text-align: left;\"><strong>download git for windows if not isntalled&nbsp;</strong></li>\n<li style=\"text-align: left;\"><strong>download SDK&nbsp; -&gt; 1GB</strong></li>\n<li style=\"text-align: left;\"><strong>extract the sdk into path not name with spaces and special characters and not in c:/programs and files</strong></li>\n<li style=\"text-align: left;\"><strong>for example: this pc/documents/flutterDev</strong></li>\n<li style=\"text-align: left;\"><strong>enter flutterDev/&nbsp; ----&gt; find <span style=\"color: #ba372a;\">flutter_console</span></strong></li>\n<li style=\"text-align: left;\"><strong>run: flutter doctor</strong></li>\n<li style=\"text-align: left;\"><strong>this downloads and&nbsp; installs flutter into computer</strong></li>\n<li style=\"text-align: left;\"><strong>then: start-&gt;search (edit the envirnoment variables)</strong></li>\n<li style=\"text-align: left;\"><strong>click on <span style=\"color: #ba372a;\">path&nbsp;</span></strong></li>\n<li style=\"text-align: left;\"><strong>then click: <span style=\"color: #ba372a;\">edit -&gt; new</span></strong></li>\n<li style=\"text-align: left;\"><strong>in flutterDev: <span style=\"color: #ba372a;\">press shift + right click</span> on <span style=\"color: #ba372a;\">bin </span>folder to <span style=\"color: #ba372a;\">copy the path</span></strong></li>\n<li style=\"text-align: left;\"><strong>paste it as a new variable (remove the qoutations)</strong></li>\n<li style=\"text-align: left;\"><strong>now flutter is accessible from anywhere from the computer</strong></li>\n<li style=\"text-align: left;\"><strong>now if you open terminal and type flutter doctor ( will execute flutter with green check mark on flutter that it worked correctly)</strong></li>\n</ol>"
          ]
        },
        {
          "name": "tutorial links",
          "data": [
            "<p>1.<span style=\"color: #ba372a;\"><strong> flutter mapp:</strong></span> https://www.youtube.com/watch?v=CD1Y2DmL5JM</p>\n<p>2. <strong><span style=\"color: #ba372a;\">flutter teacher:</span></strong>&nbsp;https://www.youtube.com/watch?v=wODGGo_EJXA</p>"
          ]
        },
        {
          "name": "Widgets to use",
          "data": [
            "<ol>\n<li>MaterialApp()&nbsp; -&gt; toplevel widget</li>\n<li>debugShowCheckedModeBanner: false</li>\n<li>home: Scaffold()\n<ul>\n<li>appBar: AppBar(\n<ul>\n<li>title: const Text('titleName')</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>body: Center(<br />\n<ul>\n<li>child; SizedBox()</li>\n<li>width: double.infinity</li>\n<li>child: Column()</li>\n<li>mainAxisAlignment: mainAxisAlignmet.center</li>\n<li>children: [\n<ul>\n<li>ElavatedButton(\n<ul>\n<li>onPressed(){}</li>\n<li>setSate()</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>BottomAppBar(child: Row(Children: [IconButton()]</li>\n<li>onTap: (){}</li>\n</ul>\n</li>\n<li>body: Center(\n<ol>\n<li>child: Container(\n<ol>\n<li>width: double.infinity</li>\n<li>height: double.infinity</li>\n<li>color: colors.red</li>\n<li>child: Row(\n<ol>\n<li>mainAxisAlignment: mainAxisAligm.cent</li>\n<li>crossAxisAlignment: cro..center</li>\n<li>children: [\n<ol>\n<li>ElevatedButton(\n<ol>\n<li>style: ElevatedButton.styleForm(\n<ol>\n<li>ForgegrounColor:</li>\n<li>backgroundColor:</li>\n</ol>\n</li>\n<li>child: Text('text')</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
            "<p>elevation: 1&nbsp; &nbsp;===&gt; box-shadow</p>\n<p>&nbsp;</p>"
          ]
        },
        {
          "name": "Basics of flutter",
          "data": [
            "<p>first enter lib/main.dart</p>\n<p>remove everything and keep void main()&nbsp; ----&gt;&gt; if we want to create a stateful class, if we want satatic and statless page then keep everything and just edit names and logic</p>\n<p>&nbsp;</p>\n<p>&nbsp;type stt and choose statefull to auto fill the statefull class</p>",
            "<p>statless for creating static pages, with all widgets are const</p>",
            "<p>statefull: can declare variables and assign it to be in values</p>\n<p>use setState(){</p>\n<p>x = y</p>\n<p>}</p>",
            "<p style=\"text-align: center;\"><span style=\"color: #e03e2d;\"><strong><span style=\"font-size: 18pt;\">first app with buttons and alignment</span></strong></span></p>\n<p style=\"text-align: left;\"><span style=\"font-size: 14pt;\"><span style=\"font-family: Consolas, 'Courier New', monospace; white-space: pre; font-size: 14px; color: #569cd6;\">import</span><span style=\"color: #d4d4d4; font-family: Consolas, 'Courier New', monospace; white-space: pre; font-size: 14px;\"> </span><span style=\"font-family: Consolas, 'Courier New', monospace; white-space: pre; font-size: 14px; color: #ce9178;\">'dart:math'</span><span style=\"color: #d4d4d4; font-family: Consolas, 'Courier New', monospace; white-space: pre; font-size: 14px;\">;</span></span></p>\n<div style=\"color: #d4d4d4; background-color: #1e1e1e; font-family: Consolas, 'Courier New', monospace; line-height: 19px; white-space: pre;\"><br />\n<div><span style=\"color: #569cd6;\">import</span> <span style=\"color: #ce9178;\">'package:flutter/material.dart'</span>;</div>\n<br />\n<div><span style=\"color: #569cd6;\">void</span> <span style=\"color: #dcdcaa;\">main</span>() {</div>\n<div>&nbsp; <span style=\"color: #dcdcaa;\">runApp</span>(<span style=\"color: #4ec9b0;\">MyApp</span>());</div>\n<div>}</div>\n<br />\n<div><span style=\"color: #569cd6;\">class</span> <span style=\"color: #4ec9b0;\">MyApp</span> <span style=\"color: #569cd6;\">extends</span> <span style=\"color: #4ec9b0;\">StatefulWidget</span> {</div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">MyApp</span>({<span style=\"color: #4ec9b0;\">Key</span>? <span style=\"color: #9cdcfe;\">key</span>}) : <span style=\"color: #569cd6;\">super</span>(<span style=\"color: #9cdcfe;\">key</span>: <span style=\"color: #9cdcfe;\">key</span>);</div>\n<br />\n<div>&nbsp; <span style=\"color: #9cdcfe;\">@</span><span style=\"color: #9cdcfe;\">override</span></div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">State</span>&lt;<span style=\"color: #4ec9b0;\">MyApp</span>&gt; <span style=\"color: #dcdcaa;\">createState</span>() =&gt; <span style=\"color: #4ec9b0;\">_MyAppState</span>();</div>\n<div>}</div>\n<br />\n<div><span style=\"color: #569cd6;\">class</span> <span style=\"color: #4ec9b0;\">_MyAppState</span> <span style=\"color: #569cd6;\">extends</span> <span style=\"color: #4ec9b0;\">State</span>&lt;<span style=\"color: #4ec9b0;\">MyApp</span>&gt; {</div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">String</span> <span style=\"color: #9cdcfe;\">buttonName</span> = <span style=\"color: #ce9178;\">'Click'</span>;</div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">int</span> <span style=\"color: #9cdcfe;\">currentIndex</span> = <span style=\"color: #b5cea8;\">0</span>;</div>\n<br />\n<div>&nbsp; <span style=\"color: #9cdcfe;\">@</span><span style=\"color: #9cdcfe;\">override</span></div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">Widget</span> <span style=\"color: #dcdcaa;\">build</span>(<span style=\"color: #4ec9b0;\">BuildContext</span> <span style=\"color: #9cdcfe;\">context</span>) {</div>\n<div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #4ec9b0;\">MaterialApp</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">debugShowCheckedModeBanner</span>: <span style=\"color: #569cd6;\">false</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">home</span>: <span style=\"color: #4ec9b0;\">Scaffold</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">appBar</span>: <span style=\"color: #4ec9b0;\">AppBar</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">title</span>: <span style=\"color: #569cd6;\">const</span> <span style=\"color: #4ec9b0;\">Text</span>(<span style=\"color: #ce9178;\">'App Titleee'</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">body</span>: <span style=\"color: #4ec9b0;\">Center</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">SizedBox</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">width</span>: <span style=\"color: #4ec9b0;\">double</span>.<span style=\"color: #9cdcfe;\">infinity</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">Column</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">mainAxisAlignment</span>: <span style=\"color: #4ec9b0;\">MainAxisAlignment</span>.<span style=\"color: #4fc1ff;\">center</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">crossAxisAlignment</span>: <span style=\"color: #4ec9b0;\">CrossAxisAlignment</span>.<span style=\"color: #4fc1ff;\">start</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">children</span>: [</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">ElevatedButton</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">onPressed</span>: () {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">setState</span>(() {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">buttonName</span> = <span style=\"color: #ce9178;\">'Clicked'</span>;</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">Text</span>(<span style=\"color: #9cdcfe;\">buttonName</span>)</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">ElevatedButton</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">onPressed</span>: () {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">setState</span>(() {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">buttonName</span> = <span style=\"color: #ce9178;\">'Clicked'</span>;</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">Text</span>(<span style=\"color: #9cdcfe;\">buttonName</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">bottomNavigationBar</span>: <span style=\"color: #4ec9b0;\">BottomNavigationBar</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">items</span>: <span style=\"color: #569cd6;\">const</span> [</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">BottomNavigationBarItem</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">label</span>: <span style=\"color: #ce9178;\">\"Setting\"</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">icon</span>: <span style=\"color: #4ec9b0;\">Icon</span>(<span style=\"color: #4ec9b0;\">Icons</span>.<span style=\"color: #9cdcfe;\">settings</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">tooltip</span>: <span style=\"color: #ce9178;\">\"Settingsssss\"</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">BottomNavigationBarItem</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">label</span>: <span style=\"color: #ce9178;\">\"Most\"</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">icon</span>: <span style=\"color: #4ec9b0;\">Icon</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">Icons</span>.<span style=\"color: #9cdcfe;\">home</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">size</span>: <span style=\"color: #b5cea8;\">35.0</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">semanticLabel</span>: <span style=\"color: #ce9178;\">'Text to announce in accessibility modes'</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ))</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">currentIndex</span>: <span style=\"color: #9cdcfe;\">currentIndex</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">onTap</span>: (<span style=\"color: #4ec9b0;\">int</span> <span style=\"color: #9cdcfe;\">index</span>) {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">setState</span>(() {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">currentIndex</span> = <span style=\"color: #9cdcfe;\">index</span>;</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )),</div>\n<div>&nbsp; &nbsp; );</div>\n<div>&nbsp; }</div>\n<div>}</div>\n</div>",
            "<p style=\"text-align: center;\"><span style=\"font-size: 18pt;\"><strong>using container istead of sizeof</strong></span></p>\n<p style=\"text-align: center;\">&nbsp;</p>\n<p style=\"text-align: left;\"><span style=\"background-color: #1e1e1e; font-family: Consolas, 'Courier New', monospace; white-space: pre; color: #569cd6;\">import</span><span style=\"background-color: #1e1e1e; color: #d4d4d4; font-family: Consolas, 'Courier New', monospace; white-space: pre;\"> </span><span style=\"background-color: #1e1e1e; font-family: Consolas, 'Courier New', monospace; white-space: pre; color: #ce9178;\">'dart:math'</span><span style=\"background-color: #1e1e1e; color: #d4d4d4; font-family: Consolas, 'Courier New', monospace; white-space: pre;\">;</span></p>\n<div style=\"color: #d4d4d4; background-color: #1e1e1e; font-family: Consolas, 'Courier New', monospace; line-height: 19px; white-space: pre;\"><br />\n<div><span style=\"color: #569cd6;\">import</span> <span style=\"color: #ce9178;\">'package:flutter/material.dart'</span>;</div>\n<br />\n<div><span style=\"color: #569cd6;\">void</span> <span style=\"color: #dcdcaa;\">main</span>() {</div>\n<div>&nbsp; <span style=\"color: #dcdcaa;\">runApp</span>(<span style=\"color: #4ec9b0;\">MyApp</span>());</div>\n<div>}</div>\n<br />\n<div><span style=\"color: #569cd6;\">class</span> <span style=\"color: #4ec9b0;\">MyApp</span> <span style=\"color: #569cd6;\">extends</span> <span style=\"color: #4ec9b0;\">StatefulWidget</span> {</div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">MyApp</span>({<span style=\"color: #4ec9b0;\">Key</span>? <span style=\"color: #9cdcfe;\">key</span>}) : <span style=\"color: #569cd6;\">super</span>(<span style=\"color: #9cdcfe;\">key</span>: <span style=\"color: #9cdcfe;\">key</span>);</div>\n<br />\n<div>&nbsp; <span style=\"color: #9cdcfe;\">@</span><span style=\"color: #9cdcfe;\">override</span></div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">State</span>&lt;<span style=\"color: #4ec9b0;\">MyApp</span>&gt; <span style=\"color: #dcdcaa;\">createState</span>() =&gt; <span style=\"color: #4ec9b0;\">_MyAppState</span>();</div>\n<div>}</div>\n<br />\n<div><span style=\"color: #569cd6;\">class</span> <span style=\"color: #4ec9b0;\">_MyAppState</span> <span style=\"color: #569cd6;\">extends</span> <span style=\"color: #4ec9b0;\">State</span>&lt;<span style=\"color: #4ec9b0;\">MyApp</span>&gt; {</div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">String</span> <span style=\"color: #9cdcfe;\">buttonName</span> = <span style=\"color: #ce9178;\">'Click'</span>;</div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">int</span> <span style=\"color: #9cdcfe;\">currentIndex</span> = <span style=\"color: #b5cea8;\">0</span>;</div>\n<br />\n<div>&nbsp; <span style=\"color: #9cdcfe;\">@</span><span style=\"color: #9cdcfe;\">override</span></div>\n<div>&nbsp; <span style=\"color: #4ec9b0;\">Widget</span> <span style=\"color: #dcdcaa;\">build</span>(<span style=\"color: #4ec9b0;\">BuildContext</span> <span style=\"color: #9cdcfe;\">context</span>) {</div>\n<div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #4ec9b0;\">MaterialApp</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">debugShowCheckedModeBanner</span>: <span style=\"color: #569cd6;\">false</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">home</span>: <span style=\"color: #4ec9b0;\">Scaffold</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">appBar</span>: <span style=\"color: #4ec9b0;\">AppBar</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">title</span>: <span style=\"color: #569cd6;\">const</span> <span style=\"color: #4ec9b0;\">Text</span>(<span style=\"color: #ce9178;\">'App Titleee'</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">body</span>: <span style=\"color: #4ec9b0;\">Center</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">Container</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">width</span>: <span style=\"color: #4ec9b0;\">double</span>.<span style=\"color: #9cdcfe;\">infinity</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">height</span>: <span style=\"color: #4ec9b0;\">double</span>.<span style=\"color: #9cdcfe;\">infinity</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">color</span>: <span style=\"color: #4ec9b0;\">Colors</span>.<span style=\"color: #9cdcfe;\">red</span>,</div>\n<br />\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">Row</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">mainAxisAlignment</span>: <span style=\"color: #4ec9b0;\">MainAxisAlignment</span>.<span style=\"color: #4fc1ff;\">center</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">crossAxisAlignment</span>: <span style=\"color: #4ec9b0;\">CrossAxisAlignment</span>.<span style=\"color: #4fc1ff;\">center</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">children</span>: [</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">ElevatedButton</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">style</span>: <span style=\"color: #4ec9b0;\">ElevatedButton</span>.<span style=\"color: #dcdcaa;\">styleFrom</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">foregroundColor</span>: <span style=\"color: #4ec9b0;\">Colors</span>.<span style=\"color: #9cdcfe;\">white</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">backgroundColor</span>: <span style=\"color: #4ec9b0;\">Colors</span>.<span style=\"color: #9cdcfe;\">orange</span></div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">onPressed</span>: () {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">setState</span>(() {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">buttonName</span> = <span style=\"color: #ce9178;\">'Clicked'</span>;</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">Text</span>(<span style=\"color: #9cdcfe;\">buttonName</span>)</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">ElevatedButton</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">onPressed</span>: () {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">setState</span>(() {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">buttonName</span> = <span style=\"color: #ce9178;\">'Clicked'</span>;</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">child</span>: <span style=\"color: #4ec9b0;\">Text</span>(<span style=\"color: #9cdcfe;\">buttonName</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">bottomNavigationBar</span>: <span style=\"color: #4ec9b0;\">BottomNavigationBar</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">items</span>: <span style=\"color: #569cd6;\">const</span> [</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">BottomNavigationBarItem</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">label</span>: <span style=\"color: #ce9178;\">\"Setting\"</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">icon</span>: <span style=\"color: #4ec9b0;\">Icon</span>(<span style=\"color: #4ec9b0;\">Icons</span>.<span style=\"color: #9cdcfe;\">settings</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">tooltip</span>: <span style=\"color: #ce9178;\">\"Settingsssss\"</span>),</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">BottomNavigationBarItem</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">label</span>: <span style=\"color: #ce9178;\">\"Most\"</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">icon</span>: <span style=\"color: #4ec9b0;\">Icon</span>(</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #4ec9b0;\">Icons</span>.<span style=\"color: #9cdcfe;\">home</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">size</span>: <span style=\"color: #b5cea8;\">35.0</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">semanticLabel</span>: <span style=\"color: #ce9178;\">'Text to announce in accessibility modes'</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ))</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">currentIndex</span>: <span style=\"color: #9cdcfe;\">currentIndex</span>,</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">onTap</span>: (<span style=\"color: #4ec9b0;\">int</span> <span style=\"color: #9cdcfe;\">index</span>) {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">setState</span>(() {</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">currentIndex</span> = <span style=\"color: #9cdcfe;\">index</span>;</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )),</div>\n<div>&nbsp; &nbsp; );</div>\n<div>&nbsp; }</div>\n<div>}</div>\n</div>",
            "<p>flutter to deal with images: use:</p>\n<p>Image.network( link from pexels or .. );</p>\n<p>------------------------------------------------------</p>\n<p>Image.asset('images/abc.png'),</p>\n<p>but first:&nbsp;</p>\n<p>create new folder name 'assets' or images or ...</p>\n<p>then, go to file: pubspec.yaml</p>\n<p>scroll down to find :</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp;assets&nbsp; --&gt; un-comment it</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp;and down add the path to folder images:</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; images/</p>"
          ]
        }
      ],
      "created_at": null,
      "updated_at": "9/14/2022",
      "depricate": [
        [],
        [],
        [],
        []
      ]
    }
  ]
}